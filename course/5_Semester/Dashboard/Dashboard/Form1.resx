<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANeSURBVHhe7dxLiM1xGMbxkbGRptyykctGiWQj2dm4TyKFyMpGCgvJWlmg2CgLs0IpIlZSMpQm
        uUWhkMatccklwgKF551ep//5zzPnzBnn8v+9Pd/6bOf8nt8RR+ecaVNKKaWUUkoppZRSSimllFJKKaWU
        UkoppZSK14ftnfUyDlbCHjgL1+GRewK34ALshw0wFdjPqVmo2MAazICtcAa+wZ8aXYGdMB/Yzx+SULGB
        QzANjgO75OHqhgXAHq+iULGBFUwEeyJ+A7vUergM84A9PhUqNnAQ6+E9sEtshF3AzjFAqNhA4iiwS2u0
        a9AO7EwloWIDcy4Cu6xmsVdoFV+RhYoNdPYn014FsUtqtncw6JMSKjbQ2T+u7HJa5Q3Qv75CxQZCF7BL
        abW7MArKzhuq/DhYDewyimIflJ05VLlxHfAF2EUUyUIonTtU2WFwCtgFFM1zKJ07VJlh44GNL6oVEPoJ
        OQ1seFG9hZHgS4Jkg8Be47PRRbcMfEmQbBBs8YGpOQy+JEg2CM77wNR8hHafEiMMGgO/fGCKFvmUGGFQ
        Z25gag76lBhh0N7cwNR0+5QYYdC53MDU3PcpMcKgm7mBqen1KTHCoMe5ganp8ykxwiD73BQbmopwT4i9
        RcqGpiLcE2Jv+rChqXjhU2KEQfbxTjY0FQ99Soww6FBuYGp6fEqMMMg++MyGpqLLp8QIgyblBqZmrU+J
        EQYZ+4QgG1t0P6DDp8QIg4x9jpYNLrqT4EuCZINgrg9MzUbwJUGyQe4GsNFF9RPGgi8Jkg1ys4ANL6od
        0H/2UP0b5ex7gGx80XyH0rlDlR0Gs4FdQNFshtK5Q5Ud5nYDu4SisDfUys4cqvw4GAE9wC6j1T6D/Ue2
        7Myhyo/LeAnsUlppJgw4a6jYQDcZmvklz2oWAzunLwkSG5gxHZ4Bu6BmWg7sfP1CxQbmjIY7wC6q0T7B
        HGDnKgkVG0jY18jsd5iwS2uUYzAF2HnKhIoNrGAJ3AZ2gfViLya2AXt8KlRs4BCsgXp/fMi+Sme/iGbA
        lzqrCRUbWINVYF8JeAXskqv5CidgE0wA9hhVhYoNHAb7/vhSOACX4B48hT73GnrhAVyFI7AOhv0kZCml
        lFJKKaWUUkoppZRSSimllFJKKaWUUuq/amv7C+gfwq4rne3PAAAAAElFTkSuQmCC
</value>
  </data>
</root>